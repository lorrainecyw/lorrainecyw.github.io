(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{775:function(o,e,t){"use strict";t.r(e);var l=t(11),r=Object(l.a)({},(function(){var o=this,e=o.$createElement,t=o._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":o.$parent.slotKey}},[t("ol",[t("li",[t("code",[o._v("Semaphore")]),o._v("允许多个线程访问临界区，所以如果多个线程同时访问共享变量时，会存在并发问题，如果临界区不是线程安全的，那么就得加锁。所以尽量保证临界区是线程安全的")]),o._v(" "),t("li",[o._v("锁的申请和释放要成对出现。如果从读锁升级成了写锁，那么就需要释放写锁")]),o._v(" "),t("li",[o._v("当看到回调函数的时候，一定问一问执行回调函数的线程是谁。在"),t("code",[o._v("CyclicBarrier")]),o._v("中，执行回调函数的是将计数器减到 0 的线程")]),o._v(" "),t("li",[o._v("默认情况下所有的"),t("code",[o._v("CompletableFuture")]),o._v("共享一个"),t("code",[o._v("ForkJoinPool")]),o._v("，当有阻塞式 I / O 时，可能导致所有的 "),t("code",[o._v("ForkJoinPool")]),o._v("线程都阻塞，进而影响整个系统的性能")])])])}),[],!1,null,null,null);e.default=r.exports}}]);